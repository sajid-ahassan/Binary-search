#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define allr(x) (x).rbegin(), (x).rend()
#define gsize(x) (int)((x).size())
#define int long long
#define endl '\n'
double pi = 3.141592653589793238462643383279;
bool comparePairs(const pair<int, int> &a, const pair<int, int> &b)
{
    if (a.first != b.first)
        return a.first < b.first;
    return a.second > b.second;
}
#define optimize()                \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
const int M = 1e7 + 1;
bool poss(vector<int> &arr, int mid)
{
    int k = mid;
    for (int i = 1; i < gsize(arr); i++)
    {
        if (arr[i] - arr[i - 1] == k)
            k--;
        else if (arr[i] - arr[i - 1] > k)
            return false;
    }
    return true;
}
void solve()
{
    int n, k;
    cin >> n;
    vector<int> arr(n+1,0);
    int mx = 0;
    for (int i = 1; i <= n; i++)
    {
        cin >> arr[i];
        mx = max(mx, arr[i]);
    }
    int s = 1, e = mx + 1, ans = 0;
    while (s <= e)
    {
        int mid = s + (e - s) / 2;
        if (poss(arr, mid))
        {
            e = mid - 1;
            ans = mid;
        }
        else
            s = mid + 1;
    }
    cout << ans << endl;
}

signed main()
{
    optimize();
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cout << "Case " << i + 1 << ": ";
        solve();
    }

    return 0;
}
// 2
// 5
// 1 6 7 11 13
// 4
// 3 9 10 14
