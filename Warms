#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define allr(x) (x).rbegin(), (x).rend()
#define gsize(x) (int)((x).size())
#define int long long
// #define endl '\n'
bool comparePairs(const pair<int, int> &a, const pair<int, int> &b)
{
    if (a.first != b.first)
        return a.first > b.first;
    return a.second < b.second;
}
#define optimize()                \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
const int M = 1e7 + 1;

void pile(vector<int> &arr, int p)
{
    int s = 0;
    int e = gsize(arr)-1;
    int ans = -1;
    while (s <= e)
    {
        int mid = s + (e - s) / 2;
        if (arr[mid] >= p)
        {
            ans = mid;
            e = mid - 1;
        }
        else
            s = mid + 1;
    }
    cout << ans << endl;
}

void solve()
{
    int n;
    cin >> n;
    vector<int> arr(n + 1);
    for (int i = 1; i < n + 1; i++)
        cin >> arr[i];
    vector<int> pre(n + 1, 0);
    for (int i = 1; i <= n; i++)
        pre[i] = pre[i - 1] + arr[i];
    int m;
    cin >> m;
    vector<int> arr1(m);
    for (auto &it : arr1)
        cin >> it;

    for (int i = 0; i < m; i++)
        pile(pre, arr1[i]);
}

signed main()
{
    optimize();
    solve();

    return 0;
}
